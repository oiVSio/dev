result = 'Ничья'
L = [['.', '.', '.'],   
        ['.', '.', '.'],
        ['.', '.', '.']]
# Задаем шаблон поля, с помощью f - строки расставляем клетки под инпут
print(f'''   0   1   2
0  {L[0][0]} | {L[0][1]} | {L[0][2]}    
1  {L[1][0]} | {L[1][1]} | {L[1][2]} 
2  {L[2][0]} | {L[2][1]} | {L[2][2]} ''')
# Запускаем цикл на 8 шагов (больше смысла нет), для чередования шагов используем отбор по четности цикла 
for n in range(1, 9):
    if n % 2 == 0:
        move_0 = input('Ход 0. Укажите номер строки и номер столбца поля ')
        i, j = int(move_0[0]), int(move_0[1])
        L[i][j] = 0
    else:
        move_x = input('Ход x. Укажите номер строки и номер столбца поля ')
        i, j = int(move_x[0]), int(move_x[1])
        L[i][j] = 'x'
    print(f'''       0   1   2
    0  {L[0][0]} | {L[0][1]} | {L[0][2]}
    1  {L[1][0]} | {L[1][1]} | {L[1][2]} 
    2  {L[2][0]} | {L[2][1]} | {L[2][2]} ''')

# Для проверки собираем большую прямоугольную матрицу со всеми вариантами выстраивания в линию
# L_symm - превращаем столбцы в списки - строки: для этого *распаковывам L и подаем в zip-функцию,
# которая склеивает нулевые элементы с нулевыми, первые с первыми и т.д. , то есть превращает столбцы в строки
# поскольку там везде получаются кортежи, - везде применяем list  
    L_symm = [list(el) for el in list(zip(*L))]
# L_diag1 и L_diag2 - диагонали
    L_diag1 = [[L[i][i] for i in range(3)]]
    L_diag2 = [[L[2 - i][i] for i in range(3)]]
    L_check = L + L_symm + L_diag1 + L_diag2
# L_check - суммируем изначальную матрицу с отзеркаленной по диагонали и с обеими диагоналями
# Теперь запускаем перебор элементов проверочной матрицы и ищем совпадение с победными списками
# при нахождении передаем соотв сообщение в резалт и останавливаем цикл
# на уровне вложенности первоначального цикла (для инпутов) помещаем брик по условию резалта
    for el in L_check:
        if el == ['x', 'x', 'x']:
            result = 'Победа х'
            break
        elif el == [0, 0, 0]:
            result = 'Победа 0'
            break
    if result == 'Победа х' or result == 'Победа 0':
        break

print(result)

# можно сделать проверку по сравнению каждого элемента, используя лямбда, олл и эни
# но у меня как то громоздко получилось и не так наглядно
# ещё можно сделать защиту от неверного ввода (надо ли?)
# можно довольно легко масштабировать - надо только везде поменять рэйнж и подогнать шаблон клеток
